(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{602:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lemonnuu/PicGoPictureBed/markdown/JavaScript/0001_BOM.png",alt:"0001_BOM"}})]),t._v(" "),a("p",[t._v("BOM(Browser Object Model, 浏览器对象模型) 是 JavaScript 与浏览器交互的接口。")]),t._v(" "),a("p",[t._v("BOM 的核心是 window 对象, 表示当前 JavaScript 脚本运行所处的窗口实例, 每一个窗口(包括 iframe )都拥有自己的 window 对象。")]),t._v(" "),a("p",[t._v("window 对象在浏览器中有两重身份, 一个是 ECMAScript 中的 Global 对象, 另一个就是浏览器窗口的 JavaScript 接口。")]),t._v(" "),a("h2",{attrs:{id:"global作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global作用域"}},[t._v("#")]),t._v(" Global作用域")]),t._v(" "),a("p",[t._v("因为 window 对象被复用为 ECMAScript 的 Global 对象, 所以通过 "),a("code",[t._v("var")]),t._v(" 声明的所有全局变量和函数都会变成 window 对象的属性和方法。")]),t._v(" "),a("p",[a("strong",[t._v("但是通过 "),a("code",[t._v("var")]),t._v(" 声明的全局变量成为 window 对象的属性或方法后不能被 "),a("code",[t._v("delete")]),t._v(" 删除。")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"},[t._v("面试题")]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在IE<9时抛出错误，在其他所有浏览器中都返回false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在IE<9时抛出错误，在其他所有浏览器中都返回true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//29")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("p",[t._v("使用 var 语句添加的 window 属性的 [[configurable]] 特性值会被设置为 false，这样定义的属性不可以通过delete操作符删除。所以 age 没有被删除, 输出29。\nwindow 对象中本身有个 name 属性，window.name 表示当前 window 的名称。\n而 color 是通过 window.color 赋值的, 所以可以被删除。")])]),a("h2",{attrs:{id:"窗口关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口关系"}},[t._v("#")]),t._v(" 窗口关系")]),t._v(" "),a("p",[t._v("当页面含有 iframe 时, 会形成窗口嵌套的场景。"),a("code",[t._v("window.top")]),t._v(" 对象始终指向最上层(最外层)窗口, 即浏览器窗口本身。\n"),a("code",[t._v("window.self")]),t._v(" 对象始终指向 "),a("code",[t._v("window")]),t._v(" 对象, 实际上, "),a("code",[t._v("window.self")]),t._v(" 与 "),a("code",[t._v("window")]),t._v(" 就是同一个对象。\n"),a("code",[t._v("window.parent")]),t._v(" 对象指向当前窗口的父窗口, 如果当前窗口就是浏览器窗口本身, 则 "),a("code",[t._v("window.parent")]),t._v(" 等于 "),a("code",[t._v("window.top")]),t._v("。")]),t._v(" "),a("p",[t._v("最上层窗口(浏览器窗口本身)的 "),a("code",[t._v("window")]),t._v(", "),a("code",[t._v("window.self")]),t._v(", "),a("code",[t._v("window.top")]),t._v(", "),a("code",[t._v("window.parent")]),t._v(" 都是等价的。可利用窗口关系来判断当前窗口是否在 iframe 框架中。")]),t._v(" "),a("p",[t._v("如果不想页面被嵌套在任何网页时, 可以这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("self "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接将页面替换成自己的网页")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果不想页面被嵌套在其他网页, 但是可以嵌套在拥有相同域名的网页, 可以这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接将页面替换成自己的网页")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"x-frame-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-frame-options"}},[t._v("#")]),t._v(" X-Frame-Options")]),t._v(" "),a("p",[t._v("从服务器端的角度来说, 可以使用 "),a("code",[t._v("X-Frame-Options")]),t._v(" 响应头, 它主要描述服务器网页资源的 iframe 权限, 有三个选项：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("DENY")]),t._v(" : 当前网页不能被嵌套在 iframe 里, 即使是在相同域名的网页中嵌套也不允许。")]),t._v(" "),a("li",[a("code",[t._v("SAMEORIGIN")]),t._v(" : 当前网页如果被嵌套, 只允许嵌套在相同域名的网页中。")]),t._v(" "),a("li",[a("code",[t._v("ALLOW-FROM")]),t._v(" : 当前网页可以在指定的 origin url 的 iframe 中被加载。")])]),t._v(" "),a("h2",{attrs:{id:"窗口位置与像素比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口位置与像素比"}},[t._v("#")]),t._v(" 窗口位置与像素比")]),t._v(" "),a("p",[t._v("浏览器提供了 "),a("code",[t._v("screenLeft")]),t._v(" 和 "),a("code",[t._v("screenTop")]),t._v(" 属性, 用于表示窗口相对于屏幕左侧和顶部的位置, 返回值的单位是 CSS 像素。")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("moveTo()")]),t._v(" 和 "),a("code",[t._v("moveBy()")]),t._v(" 方法移动窗口, 这两个方法都接收两个参数。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("moveTo()")]),t._v(" 接收移动到新位置的绝对坐标 x 和 y")]),t._v(" "),a("li",[a("code",[t._v("moveBy()")]),t._v(" 接收相对于当前位置在两个方向上移动的像素数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把窗口移动到左上角")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把窗口移动到坐标位置(200, 300)")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveBy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把窗口向下移动 100 像素")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveBy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把窗口向左移动 50 像素")]),t._v("\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("moveTo")]),t._v(", "),a("code",[t._v("moveBy")]),t._v(", "),a("code",[t._v("resizeTo")]),t._v(" 等等窗口函数, 对于本地打开的浏览器窗口而言只有 IE 生效。")]),t._v(" "),a("p",[t._v("其它浏览器, 只有当窗口对象是 "),a("code",[t._v("window.open()")]),t._v(" 出来的才能生效。")])]),a("h3",{attrs:{id:"像素比-dpr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#像素比-dpr"}},[t._v("#")]),t._v(" 像素比 (DPR)")]),t._v(" "),a("p",[t._v("CSS 像素是 Web 开发中使用的统一像素单位。这个单位的背后其实是一个角度: 0.0213°。\n如果屏幕距离人眼一臂长, 则以这个角度计算的 CSS 像素大小约为 1/96 英寸。这样定义像素大小是为了在不同设备上统一标准。")]),t._v(" "),a("p",[t._v("比如, 低分辨率平板设备上 12 像素 (CSS像素) 的文字应该与高清 4K 屏幕下 12 像素 (CSS像素) 的文字具有相同大小。\n这就带来了一个问题, 不同像素密度 (PPI, 每英寸物理像素个数) 的屏幕下就会有不同的缩放系数, 以便把物理像素 (屏幕实际的分辨率) 转换为 CSS 像素 (浏览器报告的虚拟分辨率)。")]),t._v(" "),a("p",[t._v("举个例子, 手机屏幕的物理分辨率可能是 1920 * 1080, 但因为其物理像素可能非常小, 所以浏览器就需要将其分辨率降为较低的逻辑分辨率, 比如 640 * 320。\n这个物理像素与 CSS 像素之间的转换比率由 "),a("code",[t._v("window.devicePixelRatio")]),t._v(" 属性提供。\n对于分辨率从 1920 * 1080 转换为 640 * 320 的设备, "),a("code",[t._v("window.devicePixelRatio")]),t._v(" 的值就是 3, 这样一来, 12px 的文字实际上就会用到 36物理像素来显示。")]),t._v(" "),a("p",[a("code",[t._v("window.devicePixelRatio")]),t._v(" 表示物理像素与逻辑像素的缩放系数, 也就是 1px 需要用多少物理像素表示。")]),t._v(" "),a("h2",{attrs:{id:"窗口大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口大小"}},[t._v("#")]),t._v(" 窗口大小")]),t._v(" "),a("p",[t._v("在不同浏览器中确定浏览器窗口大小没有想象的那么容易。所有现代浏览器都支持 4 个属性 : "),a("code",[t._v("outerWidth")]),t._v(", "),a("code",[t._v("outerHeight")]),t._v(", "),a("code",[t._v("innerWidth")]),t._v(", "),a("code",[t._v("innerHeight")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("window.outerWidth")]),t._v(" : 浏览器窗口自身的宽度(包含边框、滚动条)")]),t._v(" "),a("li",[a("code",[t._v("window.innerWidth")]),t._v(" : 浏览器窗口中视口宽度(不包含边框, 但包含滚动条)")]),t._v(" "),a("li",[a("code",[t._v("document.documentElement.clientWidth")]),t._v(" : 页面视口宽度(不包含滚动条)")]),t._v(" "),a("li",[a("code",[t._v("window.outerHeight")]),t._v(" : 浏览器窗口自身的高度(包含边框、工具栏、滚动条)")]),t._v(" "),a("li",[a("code",[t._v("window.innerWidth")]),t._v(" : 浏览器窗口中视口高度(不包含边框、工具栏, 但包含滚动条)")]),t._v(" "),a("li",[a("code",[t._v("document.documentElement.clientHeight")]),t._v(" : 页面视口高度(不包含滚动条)")])]),t._v(" "),a("p",[t._v("考虑到浏览器的兼容性, 可以如下获取页面视口的大小 :")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" viewportWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" viewportHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHeight\n")])])]),a("p",[t._v("可以使用 "),a("code",[t._v("resizeTo()")]),t._v(" 和 "),a("code",[t._v("resizeBy")]),t._v(" 方法调整窗口大小, 这两个方法都接收两个参数。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("resizeTo()")]),t._v(" 接收新的宽度和高度值")]),t._v(" "),a("li",[a("code",[t._v("resizeBy()")]),t._v(" 接收宽度和高度各要缩放多少")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resizeTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缩放到 100 * 100")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resizeBy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 宽度增加 100, 高度减少 150")]),t._v("\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("moveTo")]),t._v(", "),a("code",[t._v("moveBy")]),t._v(", "),a("code",[t._v("resizeTo")]),t._v(" 等等窗口函数, 对于本地打开的浏览器窗口而言只有 IE 生效。")]),t._v(" "),a("p",[t._v("其它浏览器, 只有当窗口对象是 "),a("code",[t._v("window.open()")]),t._v(" 出来的才能生效。")])]),a("h2",{attrs:{id:"视口位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视口位置"}},[t._v("#")]),t._v(" 视口位置")]),t._v(" "),a("p",[t._v("浏览器窗口尺寸通常无法满足完整显示整个页面, 为此用户可以通过滚动在有限的视口中查看文档。")]),t._v(" "),a("p",[t._v("度量文档相对于视口滚动距离的属性有俩对, 返回相等的值："),a("code",[t._v("window.pageXoffset/window.scrollX")]),t._v(" 和 "),a("code",[t._v("window.pageYoffset/window.scrollY")]),t._v(" 。")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("scroll()")]),t._v("、"),a("code",[t._v("scrollTo()")]),t._v(" 和 "),a("code",[t._v("scrollBy()")]),t._v(" 方法滚动页面。\n这三个方法都接收表示相对视口距离的 x 和 y 坐标, 这两个参数在前两个方法中表示要滚动到的坐标, 在最后一个方法中表示要滚动的距离。")]),t._v(" "),a("p",[a("code",[t._v("scroll()")]),t._v(" 与 "),a("code",[t._v("scrollTo()")]),t._v(" 方法等价。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scroll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滚动到页面左上角")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滚动到页面左上角")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollBy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相对于当前视口向下滚动 100 像素")]),t._v("\n")])])]),a("p",[t._v("这几个方法也都接收一个 scrollToOptions 字典, 除了提供偏移值, 还可以通过 behavior 属性告知浏览器是否平滑滚动。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("behavior")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正常滚动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("behavior")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smooth'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 平滑滚动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("p",[t._v("需要注意的是, 这些都是 window 对象的属性, 在元素中也有类似的属性或方法。")]),t._v(" "),a("ul",[a("li",[t._v("Element 基类: "),a("code",[t._v("scrollTop")]),t._v("、"),a("code",[t._v("scrollLeft")]),t._v("、"),a("code",[t._v("scrollWidth")]),t._v("、"),a("code",[t._v("scrollHeight")]),t._v("、"),a("code",[t._v("clientWidth")]),t._v("、"),a("code",[t._v("clientHeight")]),t._v("、"),a("code",[t._v("clientTop")]),t._v("、"),a("code",[t._v("clientLeft")]),t._v("、\n"),a("code",[t._v("scroll()")]),t._v("、"),a("code",[t._v("scrollTo()")]),t._v("、"),a("code",[t._v("scrollBy()")]),t._v("、"),a("code",[t._v("scrollIntoView()")])]),t._v(" "),a("li",[t._v("HTMLElement 接口: "),a("code",[t._v("offsetTop")]),t._v("、"),a("code",[t._v("offsetLeft")]),t._v("、"),a("code",[t._v("offsetWidth")]),t._v("、"),a("code",[t._v("offsetHeight")])])])]),a("h2",{attrs:{id:"导航与打开新窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导航与打开新窗口"}},[t._v("#")]),t._v(" 导航与打开新窗口")]),t._v(" "),a("p",[a("code",[t._v("window.open()")]),t._v(" 方法可以用于打开新浏览器窗口, 也可用于导航到指定 URL。这个方法接收 4 个参数：要加载的 URL、目的窗口、特性字符串\n和表示新窗口在浏览器历史记录中是否替代当前加载页面的布尔值。")]),t._v(" "),a("p",[t._v("通常, 一般用这个方法打开新窗口, 导航一般用 "),a("code",[t._v("window.location.href")]),t._v(" 与 "),a("code",[t._v("window.location.replace")]),t._v("。")]),t._v(" "),a("p",[t._v("弹窗只有在用户操作下才允许被创建, 在网页加载过程中调用 "),a("code",[t._v("window.open()")]),t._v(" 没有效果, 而且还可能导致向用户显示错误。\n弹窗通常可能在鼠标点击或按下键盘中某个键的情况下才能打开。")]),t._v(" "),a("h3",{attrs:{id:"弹出窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹出窗口"}},[t._v("#")]),t._v(" 弹出窗口")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("window.open()")]),t._v(" 的第二个参数是一个已经存在的窗口名字, 则会在对应的窗口中打开 URL。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 与<a href="http://www.xx.com" target="topFrame" /> 作用相同')]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.xx.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'topFrame'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v('执行这行代码的结果就如同用户点击了一个 href 属性为 "http://www.xx.com", target 属性为 "topFrame" 的链接。\n如果有一个窗口名叫 "topFrame", 则这个窗口就会打开 URL; 否则就会打开一个新窗口并将其命名为 "topFrame"。\n第二个参数也可以是一个特殊的窗口名, 如 _self、_parent、_top、_blank。')]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("window.open()")]),t._v(" 的第二个参数不是已有窗口, 则会打开一个新窗口或标签页。第三个参数, 即特性字符串, 用于指定新窗口的配置。\n如果没有传第三个参数, 则新窗口会带有所有默认的浏览器特性。如果打开的不是新窗口, 则忽略第三个参数。")]),t._v(" "),a("p",[t._v("特性字符串是一个逗号分隔的设置字符串, 用于指定新窗口包含的特性, 常用的就 "),a("code",[t._v("left")]),t._v("、"),a("code",[t._v("top")]),t._v("、"),a("code",[t._v("width")]),t._v(" 与 "),a("code",[t._v("height")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("设置")]),t._v(" "),a("th",[t._v("值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("width")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("新窗口宽度。这个值不能小于 100")])]),t._v(" "),a("tr",[a("td",[t._v("height")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("新窗口高度。这个值不能小于 100")])]),t._v(" "),a("tr",[a("td",[t._v("left")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("新窗口的 x 轴坐标。这个值不能是负值")])]),t._v(" "),a("tr",[a("td",[t._v("top")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("新窗口的 y 轴坐标。这个值不能是负值")])])])]),t._v(" "),a("p",[t._v("这些设置需要以逗号分隔的键值对形式出现, 其中名值对以等号连接。(特性字符串中不能包含空格), 例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.xx.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_blank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=200,height=200,top=50,left=30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[a("code",[t._v("window.open()")]),t._v(" 方法返回一个对新建窗口的引用。这个对象与普通 window 对象没有什么区别, 可以使用这个对象操纵新打开的窗口。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" winByOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.xx.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_blank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=200,height=200,top=50,left=30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("还可以使用 close() 方法像这样关闭新打开的窗口：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("winByOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("关闭窗口引用以后, 窗口的引用虽然还在, 但只能用于检查其 closed 属性了：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("winByOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winByOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("closed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("新创建窗口的 window 对象有一个属性 opener, 指向打开它的窗口。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winByOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opener "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("虽然新建窗口中有指向打开它的窗口的指针, 但反之则不然。窗口不会跟踪记录自己打开的新窗口, 因此需要自己记录。")]),t._v(" "),a("h3",{attrs:{id:"弹窗屏蔽程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹窗屏蔽程序"}},[t._v("#")]),t._v(" 弹窗屏蔽程序")]),t._v(" "),a("p",[t._v("所有现代浏览器都内置了屏蔽弹窗的程序, 因此大多数意料之外的弹窗都会被屏蔽。在浏览器屏蔽弹窗时, 可能会发生一些事情。\n如果是浏览器内置的弹窗屏蔽程序阻止了弹窗, 那么 window.open() 很可能会返回 null。\n此时, 只要检查这个方法的返回值就可以知道弹窗是否被屏蔽了, 比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" winByOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.xx.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_blank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=200,height=200,top=50,left=30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winByOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The popup was blocked!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在浏览器或其他程序屏蔽弹窗时, window.open() 通常会抛出错误。因此要准确检测弹窗是否被屏蔽,\n除了检测 window.open() 的返回值, 还要用 try/catch 将它包装起来, 像这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" blocked "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" winByOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.xx.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_blank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=200,height=200,top=50,left=30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winByOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    blocked "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  blocked "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The popup was blocked!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("无论弹窗是用什么方法屏蔽的, 以上代码都可以准确判断调用 window.open() 的弹窗是否被屏蔽了。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("检测弹窗是否被屏蔽, 不影响浏览器显示关于弹窗被屏蔽的消息。")])]),a("h2",{attrs:{id:"定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[t._v("#")]),t._v(" 定时器")]),t._v(" "),a("p",[t._v("JavaScript 在浏览器中是单线程执行的, 但允许使用定时器指定某个时间后或每隔一段时间就执行相应的代码。")]),t._v(" "),a("p",[t._v("setTimeout() 用于指定在一定时间后执行某些代码, 而 setInterval() 用于指定每隔一段时间执行某些代码。")]),t._v(" "),a("h3",{attrs:{id:"settimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#settimeout"}},[t._v("#")]),t._v(" setTimeout")]),t._v(" "),a("p",[t._v("setTimeout() 方法通常接收两个参数：要执行的代码和将回调函数放入任务队列等待的时间(以毫秒计)。\n"),a("strong",[t._v("第一个参数可以是包含 JavaScript 代码的字符串")]),t._v("(类似传给 eval() 的字符串)或者一个函数, 比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("第二个是等待的毫秒数, 但不是执行代码的确切时间。JavaScript 是单线程的, 所以每次只能执行一段代码。\n为了调度不同代码的执行, JavaScript 维护了一个任务队列。其中的任务会按照添加到队列的先后顺序执行。\n"),a("strong",[t._v("setTimeout() 的第二个参数只是告诉 JavaScript 引擎在指定的毫秒数过后把任务添加到这个队列。\n如果这个队列是空的, 则会立即执行该代码。如果队列不是空的, 则代码必须等待前面的任务执行完才能执行。")])]),t._v(" "),a("p",[t._v("调用 setTimeout() 时, 会返回一个表示该超时排期的数值 ID。这个超时 ID 是被排期执行代码的唯一标识符, 可用于取消该任务。\n要取消等待中的排期任务, 可以调用 clearTimeout() 方法并传入超时 ID, 例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeoutId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeoutId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("只要在指定时间到达之前调用 clearTimeout(), 就可以取消超时任务。在任务执行后再调用 clearTimeout() 没有效果。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("p",[t._v("所有超时执行的代码都会在全局作用域中的一个匿名函数中运行, 因此函数中的 this 值在非严格模式始终指向 window,\n而在严格模式下是 undefined。如果给 setTimeout() 提供一个箭头函数, 那么 this 会保留为定义它时所在的词汇作用域。")])]),a("h3",{attrs:{id:"setinterval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setinterval"}},[t._v("#")]),t._v(" setInterval")]),t._v(" "),a("p",[t._v("setInterval() 与 setTimeout() 的使用方法类似, 只不过指定的任务会每隔指定时间就被推入任务队列一次, 直到取消循环定时或页面卸载。\nsetInterval() 同样可以接收两个参数：要执行的代码(字符或函数), 以及下一次将任务推入任务队列的时间(毫秒)。例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("第二个参数, 也就是间隔时间, 指的是向任务队列添加新任务之前等待的时间。比如, 调用 setInterval() 的时间为 01:00:00,\n间隔时间为 3000 毫秒。这意味着 01:00:03 时, 浏览器会把任务添加到执行队列。\n浏览器不关心这个任务什么时候执行或执行要花多长时间。因此, 到了 01:00:06, 它会再次向任务队列添加一个任务。")]),t._v(" "),a("p",[a("strong",[t._v("由此可见, 执行时间短, 非阻塞的回调函数比较适合 setInterval。")])])]),a("p",[t._v("setInterval() 也会返回一个循环定时 ID, 可以用于在未来某个时间点上取消循环定时。要取消循环定时, 可以调用 clearInterval() 并传入定时 ID。\n相对于 setTimeout() 而言, 取消定时的能力对 setInterval() 更加重要。毕竟, 如果一直不管它, 那么定时任务会一直执行到页面卸载。例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" intervalId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intervalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    intervalId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这个循环任务模式也可以用 setTimeout() 来实现, 比如：")]),t._v(" "),a("div",{staticStyle:{"page-break-before":"always"}}),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("loopFuc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loopFuc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loopFuc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("利用 setTimeout() 实现循环任务是推荐的做法, setInterval() 在实践中很少会在生产环境下使用, 因为一个任务结束和下一个任务开始之间的时间间隔是无法保证的,\n有些任务可能会因此被跳过。而利用 setTimeout() 实现则能确保不会出现这种情况。一般来说, 最好不要使用 setInterval()")]),t._v(" "),a("h2",{attrs:{id:"系统对话框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统对话框"}},[t._v("#")]),t._v(" 系统对话框")]),t._v(" "),a("p",[t._v("使用 alert()、confirm() 和 promt() 方法, 可以让浏览器调用系统对话框向用户显示消息。这些对话框与浏览器中设置的网页无关, 而且也不包含 HTML。\n它们的外观由操作系统或浏览器决定, 无法使用 CSS 设置。")]),t._v(" "),a("p",[a("strong",[t._v("此外, 这些对话框都是同步的模态对话框, 即在它们显示的时候, 代码会停止执行, 在它们消失后, 代码才会恢复执行")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v('警告框 alert() 只接收一个参数, 调用 alert() 时, 传入的字符串会显示在一个系统对话框。对话框只有一个 "OK"(确定) 按钮。\n如果传给 alert() 的参数不是一个原始字符串, 则会调用这个值的 toString() 方法将其转换为字符串。')]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v('确认框 confirm() 与警告框很类似, 都会向用户显示消息。但不同之处在于, 确认框有两个按钮: "Cancel"(取消) 和 "OK"(确定)。\n要知道用户单击了 OK 按钮或是 Cancel 按钮, 可以判断 confirm() 的返回值: true 表示单击了 OK 按钮, false 表示单击了 Cancel 按钮\n或者通过单击某一角上的 X 图标关闭了确认框。')]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("提示框 promt() 用途是提示用户输入消息。除了 OK 按钮和 Cancel 按钮, 提示框还会显示一个文本框, 让用户输入内容。\npromt() 方法接收两个参数: 要显示给用户的文本, 以及文本框的默认值(可以是空字符串)。")]),t._v(" "),a("p",[t._v("如果用户单击了 OK 按钮, 则 promt() 会返回文本框中的值。如果用户单击了 Cancel 按钮, 或者提示框被关闭, 则 promt() 会返回 null。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v('JavaScript 还可以显示另外两种对话框: find() 和 print()。这两种对话框都是异步显示的, 即控制权会立即返回给脚本。\n用户在浏览器菜单上选择 "查找"(find) 和 打印(print) 时显示的就是这两种对话框。\n可以通过在 window 对象上调用 find() 和 print() 显示它们。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示查找对话框")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示打印对话框")]),t._v("\n")])])]),a("p",[t._v("这两个方法不会返回任何有关用户在对话框中执行了什么操作的信息。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("ul",[a("li",[t._v("同步对话框: alert()、confirm()、promt()")]),t._v(" "),a("li",[t._v("异步对话框: find()、print()")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);